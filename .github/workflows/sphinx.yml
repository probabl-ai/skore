name: Sphinx

# 0.1/
# 0.2/
# 0.3/
# dev/
# latest/
# index.html
# versions.json

on:
  pull_request:
    paths:
      - '.github/actions/sphinx/**'
      - '.github/workflows/sphinx.yml'
      - 'examples/**'
      - 'sphinx/**'
      - 'skore/**'
  push:
    branches:
      - main
    paths:
      - '.github/actions/sphinx/**'
      - '.github/workflows/sphinx.yml'
      - 'examples/**'
      - 'sphinx/**'
      - 'skore/**'
  release:
    types: [released]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  sphinx-version:
    runs-on: ubuntu-latest
    outputs:
      SPHINX_VERSION: ${{ steps.sphinx-version.outputs.SPHINX_VERSION }}
    steps:
      - shell: bash
        id: sphinx-version
        run: |
          set -u

          if [[ "${GITHUB_EVENT_NAME}" != "release" ]]; then
              echo "SPHINX_VERSION=dev" >> "${GITHUB_OUTPUT}"
              exit 0
          fi

          set -e

          if [[ "${GITHUB_REF_NAME}" =~ ^(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)?$ ]]; then
              echo "SPHINX_VERSION=${BASH_REMATCH[1]}.${BASH_REMATCH[2]}" >> "${GITHUB_OUTPUT}"
          fi

  sphinx-build:
    runs-on: ubuntu-latest
    needs: sphinx-version
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      - uses: ./.github/actions/sphinx/build
        with:
          SPHINX_VERSION: ${{ needs.sphinx-version.outputs.SPHINX_VERSION }}
      - uses: actions/upload-artifact@v4
        with:
          name: sphinx-html-artifact
          path: sphinx/build/html/

  sphinx-deploy-on-release:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'release' }}
    needs: [sphinx-version, sphinx-build]
    steps:
      - uses: actions/checkout@v4

      # si tag
      #     récupérer version X.Y
      #     build X.Y/
      #     sync X.Y/
      #
      - uses: actions/download-artifact@v4
        with:
          name: sphinx-html-artifact
          path: html/
      - uses: ./.github/actions/sphinx/deploy
        with:
          CONFIGURATION: ${{ secrets.RCLONE_CONFIG_DOCS }}
          SOURCE: html/
          DESTINATION: ${{ needs.sphinx-version.outputs.SPHINX_VERSION }}/

      #
      # si tag
      #     récupérer version X.Y
      #     build versions.json (N versions max)
      #     sync versions.json
      #
      - shell: python
        run: |
            import os
            import requests
            import operator
            import json

            url = os.environ["URL"]
            current = os.environ["CURRENT"]

            response = requests.get(f"{url}/versions.json")
            response.raise_for_status()

            history = set(map(operator.itemgetter("version"), response.json())) - {"dev"} | {current}
            history = sorted(history, key=lambda x: float(x), reverse=True)[:10]

            new = [
                {
                    "name": version,
                    "version": version,
                    "url": f"{url}/{version}/",
                    "preferred": i == 1,
                }
                for i, version in enumerate(["dev"] + history)
            ]

            with open("versions.json", "w", encoding="utf-8") as file:
                json.dump(new, file, ensure_ascii=False, indent=4)

            with open("index.html", "w", encoding="utf-8") as file:
              file.write(
                  f"""
                  <head>
                    <meta http-equiv=\"refresh\" content=\"0; url={new[1]["url"]}\"/>
                  </head>
                  """
              )
        env:
          CURRENT: ${{ needs.sphinx-version.outputs.SPHINX_VERSION }}
          URL: https://skore.probabl.ai  # !

      - uses: ./.github/actions/sphinx/deploy
        with:
          CONFIGURATION: ${{ secrets.RCLONE_CONFIG_DOCS }}
          ACTION: copy
          SOURCE: versions.json
          DESTINATION:

      # si tag
      #     recuperer versions.json
      #     build index.html
      #     sync index.html
      #

      - uses: ./.github/actions/sphinx/deploy
        with:
          CONFIGURATION: ${{ secrets.RCLONE_CONFIG_DOCS }}
          ACTION: copy
          SOURCE: index.html
          DESTINATION:

  sphinx-deploy-on-main-push:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    needs: sphinx-build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: sphinx-html-artifact
          path: html/
      - uses: ./.github/actions/sphinx/deploy
        with:
          CONFIGURATION: ${{ secrets.RCLONE_CONFIG_DOCS }}
          SOURCE: html/
          DESTINATION: dev/

      # si main.push
      #     build dev/
      #     sync dev/

  sphinx-clean:
    runs-on: ubuntu-latest
    if: always()
    needs: [sphinx-deploy-on-release, sphinx-deploy-on-main-push]
    steps:
      - uses: geekyeggo/delete-artifact@v5
        with:
          name: sphinx-html-artifact
