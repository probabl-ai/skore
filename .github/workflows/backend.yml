name: Reusable skore workflow

on: [workflow_call]

defaults:
  run:
    shell: "bash"
    working-directory: "./skore"

jobs:
  test-skore:
    strategy:
      fail-fast: true
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
      - name:
        timeout-minutes: 10
        run: |
          # Install dependencies
          python -m pip install --upgrade pip
          python -m pip install --upgrade pre-commit
          python -m pip install --upgrade build

          # Lint
          pre-commit run --all-files ruff

          # Build
          python -m build

          # Install
          wheel=(dist/*.whl); python -m pip install "${wheel}[test]"

          # Test
          python -m pytest --no-cov src/ tests/ -n auto

  coverage-skore:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.12
          cache: "pip"
      - name: pytest coverage
        run: |
          # Install dependencies
          python -m pip install --upgrade pip
          python -m pip install --upgrade pre-commit
          python -m pip install --upgrade build
          python -m pip install -e .[test]

          # run coverage
          python -m pytest -n auto --junitxml=coverage.xml --cov=skore src/ tests/ | tee pytest-coverage.txt
      - name: Pytest coverage comment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-coverage-path: ./skore/pytest-coverage.txt
          junitxml-path: ./skore/coverage.xml
          title: pytest coverage report
