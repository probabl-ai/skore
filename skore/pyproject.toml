[project]
name = "skore"
description = "the scikit-learn sidekick"
dynamic = [
  "license",
  "readme",
  "version",
  "dependencies",
  "optional-dependencies",
]
requires-python = ">=3.9, <3.13"
maintainers = [{ name = "skore developers", email = "skore@signal.probabl.ai" }]
classifiers = [
  "Intended Audience :: Science/Research",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Topic :: Software Development",
  "Topic :: Scientific/Engineering",
  "Development Status :: 3 - Alpha",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX",
  "Operating System :: Unix",
  "Operating System :: MacOS",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]

[project.urls]
Homepage = "https://probabl.ai"
Repository = "https://github.com/probabl-ai/skore"
Download = "https://pypi.org/project/skore/#files"
Issues = "https://github.com/probabl-ai/skore/issues"
"Release notes" = "https://github.com/probabl-ai/skore/releases"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata.hooks.custom]
path = "hatch/metadata.py"
version-default = "0.0.0+unknown"
license = { "file" = "../LICENSE" }
readme = { "file" = "../README.md" }
dependencies = { "file" = "requirements.in" }
optional-dependencies.test = { "file" = "test-requirements.in" }
optional-dependencies.sphinx = { "file" = "sphinx-requirements.in" }

[tool.hatch.build.targets.sdist]
only-include = ["src/", "hatch/"]

[tool.hatch.build.targets.wheel]
package = ["src/skore/"]

[tool.pytest.ini_options]
addopts = [
  "--doctest-modules",
  "--import-mode=importlib",
  "--no-header",
  "--verbosity=2",
  # We ignore unwanted directories rather than including wanted ones, because
  # otherwise it becomes impossible to test only one file (the argument gets
  # appended to the defaults)
  "--ignore=doc",
  "--ignore=examples",
  "--ignore=notebooks",
  "--dist=loadscope",
]
doctest_optionflags = ["ELLIPSIS", "NORMALIZE_WHITESPACE"]

[tool.coverage.run]
branch = true
source = ["skore"]
concurrency = ["thread", "multiprocessing"]
parallel = true

[tool.coverage.report]
omit = ["*/externals/*", "src/*", "tests/*"]
show_missing = true

[tool.ruff]
src = ["skore"]
exclude = ["doc"]

[tool.ruff.lint]
select = [
  # pycodestyle
  "E",
  # Pyflakes
  "F",
  # pyupgrade
  "UP",
  # flake8-bugbear
  "B",
  # flake8-simplify
  "SIM",
  # flake8-print
  "T",
  # isort
  "I",
  # pydocstyle
  "D",
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
"src/*" = ["UP007"]
"tests/*" = ["D"]

[tool.mypy]
ignore_missing_imports = true
exclude = ["src/skore/externals/.*", "ci/*", "hatch/*", "tests/*"]

[[tool.mypy.overrides]]
module = ["diskcache.*", "sklearn.*"]
ignore_missing_imports = true
