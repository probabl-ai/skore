[project]
name = "skore"
description = "Tooling and assistance for data scientists to \"Own Your Data Science\""
dynamic = [
  "license",
  "readme",
  "version"
]
requires-python = ">=3.9, <3.13"
maintainers = [{name = "skore developers", email="skore@signal.probabl.ai"}]
dependencies = [
  "diskcache",
  "fastapi",
  "rich",
  "skops",
  "uvicorn",
]
classifiers=[
  "Intended Audience :: Science/Research",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: BSD License",
  "Programming Language :: Python",
  "Topic :: Software Development",
  "Topic :: Scientific/Engineering",
  "Development Status :: 3 - Alpha",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX",
  "Operating System :: Unix",
  "Operating System :: MacOS",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]

[project.urls]
Homepage = "https://probabl.ai"
Repository = "https://github.com/probabl-ai/skore"
Download = "https://pypi.org/project/skore/#files"
Issues = "https://github.com/probabl-ai/skore/issues"
"Release notes" = "https://github.com/probabl-ai/skore/releases"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata.hooks.custom]
path = "hatch/metadata.py"
license-file = "../LICENSE"
readme-file = "../README.md"
version-default = "0.0.0+unknown"

[tool.hatch.build.targets.sdist]
only-include = ["src/", "hatch/"]
artifacts = ["src/skore/ui/static/"]

[tool.hatch.build.targets.wheel]
package = ["src/skore/"]
artifacts = ["src/skore/ui/static/"]

[project.optional-dependencies]
test = [
  "altair",
  "httpx",
  "matplotlib",
  "pandas",
  "pillow",
  "plotly",
  "pre-commit",
  "pytest",
  "pytest-cov",
  "pytest-order",
  "pytest-randomly",
  "ruff",
  "scikit-learn",
]

[tool.pytest.ini_options]
addopts = [
  "--doctest-modules",
  "--cov=src/",
  "--cov=tests/",
  "--cov-branch",
  "--import-mode=importlib",
  "--no-header",
  "--verbosity=2",
  # We ignore unwanted directories rather than including wanted ones, because
  # otherwise it becomes impossible to test only one file (the argument gets
  # appended to the defaults)
  "--ignore=doc",
  "--ignore=examples",
  "--ignore=notebooks",
]

[tool.ruff]
src = ["skore"]
exclude = [
  "doc"
]

[tool.ruff.lint]
select = [
  # pycodestyle
  "E",
  # Pyflakes
  "F",
  # pyupgrade
  "UP",
  # flake8-bugbear
  "B",
  # flake8-simplify
  "SIM",
  # flake8-print
  "T",
  # isort
  "I",
  # pydocstyle
  "D",
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D"]
"examples/*" = [
  "D",
  # It's fine not to put the import at the top of the file in the examples
  # folder.
  "E402",
  # Useless expressions are useful!
  "B018",
]

[tool.typos.default]
extend-ignore-re = [
  # Line ignore with trailing `# spellchecker:disable-line`
  "(?Rm)^.*(#|//)\\s*spellchecker:disable-line$",
  # Line block with `# spellchecker:<on|off>`
  "(?s)(#|//)\\s*spellchecker:off.*?\\n\\s*(#|//)\\s*spellchecker:on",
]

[tool.typos.files]
extend-exclude = [
  "*.min.js",
]

[tool.typos.default.extend-words]
# acronym for "False Positive Rate"
fpr = "fpr"
# typos considers pnd.NpNDArray as a typo and corrects it to pnd.NpANDArray
ND = "ND"
