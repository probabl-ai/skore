
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_01_getting_started.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plot_01_getting_started.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_01_getting_started.py:


.. _example_getting_started:

==========================
Getting started with skore
==========================

This getting started guide illustrates how to use skore and why:

#. Track and visualize your ML/DS results using skore's :class:`~skore.Project` and UI.
#. Get assistance when developing your ML/DS projects.

   - Scikit-learn compatible :func:`~skore.cross_validate` provides insights and checks on cross-validation.


Creating a skore project, loading it, and launching the UI
==========================================================

.. GENERATED FROM PYTHON SOURCE LINES 21-22

From your shell, initialize a skore project, here named ``my_project``:

.. GENERATED FROM PYTHON SOURCE LINES 24-32

.. code-block:: Python

    import subprocess

    # remove the skore project if it already exists
    subprocess.run("rm -rf my_project.skore".split())

    # create the skore project
    subprocess.run("python3 -m skore create my_project".split())





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    CompletedProcess(args=['python3', '-m', 'skore', 'create', 'my_project'], returncode=0)



.. GENERATED FROM PYTHON SOURCE LINES 33-47

This will create a skore project directory named ``my_project.skore`` in your
current directory.

From your shell (in the same directory), start the UI locally:

.. code-block:: bash

    python -m skore launch "my_project"

This will automatically open a browser at the UI's location.

Now that the project exists, we can write some Python code (in the same
directory) to add (:func:`~skore.Project.put`) some useful items in it.
Let us load the project and add an integer to it for example:

.. GENERATED FROM PYTHON SOURCE LINES 49-54

.. code-block:: Python

    from skore import load

    my_project = load("my_project.skore")
    my_project.put("my_int", 3)








.. GENERATED FROM PYTHON SOURCE LINES 55-61

Example of machine learning usage: hyperparameter sweep
=======================================================

As an illustration of skore's usage with a machine learning motivation, let us
perform a hyperparameter sweep and store relevant information in the skore
project.

.. GENERATED FROM PYTHON SOURCE LINES 63-65

We search for the ``alpha`` hyperparameter of a Ridge regression on the
Diabetes dataset:

.. GENERATED FROM PYTHON SOURCE LINES 67-83

.. code-block:: Python

    import numpy as np
    from sklearn.datasets import load_diabetes
    from sklearn.model_selection import GridSearchCV
    from sklearn.linear_model import Ridge

    diabetes = load_diabetes()
    X = diabetes.data[:150]
    y = diabetes.target[:150]

    gs_cv = GridSearchCV(
        Ridge(),
        param_grid={"alpha": np.logspace(-3, 5, 50)},
        scoring="neg_root_mean_squared_error",
    )
    gs_cv.fit(X, y)






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <style>#sk-container-id-1 {
      /* Definition of color scheme common for light and dark mode */
      --sklearn-color-text: black;
      --sklearn-color-line: gray;
      /* Definition of color scheme for unfitted estimators */
      --sklearn-color-unfitted-level-0: #fff5e6;
      --sklearn-color-unfitted-level-1: #f6e4d2;
      --sklearn-color-unfitted-level-2: #ffe0b3;
      --sklearn-color-unfitted-level-3: chocolate;
      /* Definition of color scheme for fitted estimators */
      --sklearn-color-fitted-level-0: #f0f8ff;
      --sklearn-color-fitted-level-1: #d4ebff;
      --sklearn-color-fitted-level-2: #b3dbfd;
      --sklearn-color-fitted-level-3: cornflowerblue;

      /* Specific color for light theme */
      --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));
      --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));
      --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));
      --sklearn-color-icon: #696969;

      @media (prefers-color-scheme: dark) {
        /* Redefinition of color scheme for dark theme */
        --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));
        --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));
        --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));
        --sklearn-color-icon: #878787;
      }
    }

    #sk-container-id-1 {
      color: var(--sklearn-color-text);
    }

    #sk-container-id-1 pre {
      padding: 0;
    }

    #sk-container-id-1 input.sk-hidden--visually {
      border: 0;
      clip: rect(1px 1px 1px 1px);
      clip: rect(1px, 1px, 1px, 1px);
      height: 1px;
      margin: -1px;
      overflow: hidden;
      padding: 0;
      position: absolute;
      width: 1px;
    }

    #sk-container-id-1 div.sk-dashed-wrapped {
      border: 1px dashed var(--sklearn-color-line);
      margin: 0 0.4em 0.5em 0.4em;
      box-sizing: border-box;
      padding-bottom: 0.4em;
      background-color: var(--sklearn-color-background);
    }

    #sk-container-id-1 div.sk-container {
      /* jupyter's `normalize.less` sets `[hidden] { display: none; }`
         but bootstrap.min.css set `[hidden] { display: none !important; }`
         so we also need the `!important` here to be able to override the
         default hidden behavior on the sphinx rendered scikit-learn.org.
         See: https://github.com/scikit-learn/scikit-learn/issues/21755 */
      display: inline-block !important;
      position: relative;
    }

    #sk-container-id-1 div.sk-text-repr-fallback {
      display: none;
    }

    div.sk-parallel-item,
    div.sk-serial,
    div.sk-item {
      /* draw centered vertical line to link estimators */
      background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));
      background-size: 2px 100%;
      background-repeat: no-repeat;
      background-position: center center;
    }

    /* Parallel-specific style estimator block */

    #sk-container-id-1 div.sk-parallel-item::after {
      content: "";
      width: 100%;
      border-bottom: 2px solid var(--sklearn-color-text-on-default-background);
      flex-grow: 1;
    }

    #sk-container-id-1 div.sk-parallel {
      display: flex;
      align-items: stretch;
      justify-content: center;
      background-color: var(--sklearn-color-background);
      position: relative;
    }

    #sk-container-id-1 div.sk-parallel-item {
      display: flex;
      flex-direction: column;
    }

    #sk-container-id-1 div.sk-parallel-item:first-child::after {
      align-self: flex-end;
      width: 50%;
    }

    #sk-container-id-1 div.sk-parallel-item:last-child::after {
      align-self: flex-start;
      width: 50%;
    }

    #sk-container-id-1 div.sk-parallel-item:only-child::after {
      width: 0;
    }

    /* Serial-specific style estimator block */

    #sk-container-id-1 div.sk-serial {
      display: flex;
      flex-direction: column;
      align-items: center;
      background-color: var(--sklearn-color-background);
      padding-right: 1em;
      padding-left: 1em;
    }


    /* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is
    clickable and can be expanded/collapsed.
    - Pipeline and ColumnTransformer use this feature and define the default style
    - Estimators will overwrite some part of the style using the `sk-estimator` class
    */

    /* Pipeline and ColumnTransformer style (default) */

    #sk-container-id-1 div.sk-toggleable {
      /* Default theme specific background. It is overwritten whether we have a
      specific estimator or a Pipeline/ColumnTransformer */
      background-color: var(--sklearn-color-background);
    }

    /* Toggleable label */
    #sk-container-id-1 label.sk-toggleable__label {
      cursor: pointer;
      display: block;
      width: 100%;
      margin-bottom: 0;
      padding: 0.5em;
      box-sizing: border-box;
      text-align: center;
    }

    #sk-container-id-1 label.sk-toggleable__label-arrow:before {
      /* Arrow on the left of the label */
      content: "â–¸";
      float: left;
      margin-right: 0.25em;
      color: var(--sklearn-color-icon);
    }

    #sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {
      color: var(--sklearn-color-text);
    }

    /* Toggleable content - dropdown */

    #sk-container-id-1 div.sk-toggleable__content {
      max-height: 0;
      max-width: 0;
      overflow: hidden;
      text-align: left;
      /* unfitted */
      background-color: var(--sklearn-color-unfitted-level-0);
    }

    #sk-container-id-1 div.sk-toggleable__content.fitted {
      /* fitted */
      background-color: var(--sklearn-color-fitted-level-0);
    }

    #sk-container-id-1 div.sk-toggleable__content pre {
      margin: 0.2em;
      border-radius: 0.25em;
      color: var(--sklearn-color-text);
      /* unfitted */
      background-color: var(--sklearn-color-unfitted-level-0);
    }

    #sk-container-id-1 div.sk-toggleable__content.fitted pre {
      /* unfitted */
      background-color: var(--sklearn-color-fitted-level-0);
    }

    #sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {
      /* Expand drop-down */
      max-height: 200px;
      max-width: 100%;
      overflow: auto;
    }

    #sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {
      content: "â–¾";
    }

    /* Pipeline/ColumnTransformer-specific style */

    #sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {
      color: var(--sklearn-color-text);
      background-color: var(--sklearn-color-unfitted-level-2);
    }

    #sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {
      background-color: var(--sklearn-color-fitted-level-2);
    }

    /* Estimator-specific style */

    /* Colorize estimator box */
    #sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {
      /* unfitted */
      background-color: var(--sklearn-color-unfitted-level-2);
    }

    #sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {
      /* fitted */
      background-color: var(--sklearn-color-fitted-level-2);
    }

    #sk-container-id-1 div.sk-label label.sk-toggleable__label,
    #sk-container-id-1 div.sk-label label {
      /* The background is the default theme color */
      color: var(--sklearn-color-text-on-default-background);
    }

    /* On hover, darken the color of the background */
    #sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {
      color: var(--sklearn-color-text);
      background-color: var(--sklearn-color-unfitted-level-2);
    }

    /* Label box, darken color on hover, fitted */
    #sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {
      color: var(--sklearn-color-text);
      background-color: var(--sklearn-color-fitted-level-2);
    }

    /* Estimator label */

    #sk-container-id-1 div.sk-label label {
      font-family: monospace;
      font-weight: bold;
      display: inline-block;
      line-height: 1.2em;
    }

    #sk-container-id-1 div.sk-label-container {
      text-align: center;
    }

    /* Estimator-specific */
    #sk-container-id-1 div.sk-estimator {
      font-family: monospace;
      border: 1px dotted var(--sklearn-color-border-box);
      border-radius: 0.25em;
      box-sizing: border-box;
      margin-bottom: 0.5em;
      /* unfitted */
      background-color: var(--sklearn-color-unfitted-level-0);
    }

    #sk-container-id-1 div.sk-estimator.fitted {
      /* fitted */
      background-color: var(--sklearn-color-fitted-level-0);
    }

    /* on hover */
    #sk-container-id-1 div.sk-estimator:hover {
      /* unfitted */
      background-color: var(--sklearn-color-unfitted-level-2);
    }

    #sk-container-id-1 div.sk-estimator.fitted:hover {
      /* fitted */
      background-color: var(--sklearn-color-fitted-level-2);
    }

    /* Specification for estimator info (e.g. "i" and "?") */

    /* Common style for "i" and "?" */

    .sk-estimator-doc-link,
    a:link.sk-estimator-doc-link,
    a:visited.sk-estimator-doc-link {
      float: right;
      font-size: smaller;
      line-height: 1em;
      font-family: monospace;
      background-color: var(--sklearn-color-background);
      border-radius: 1em;
      height: 1em;
      width: 1em;
      text-decoration: none !important;
      margin-left: 1ex;
      /* unfitted */
      border: var(--sklearn-color-unfitted-level-1) 1pt solid;
      color: var(--sklearn-color-unfitted-level-1);
    }

    .sk-estimator-doc-link.fitted,
    a:link.sk-estimator-doc-link.fitted,
    a:visited.sk-estimator-doc-link.fitted {
      /* fitted */
      border: var(--sklearn-color-fitted-level-1) 1pt solid;
      color: var(--sklearn-color-fitted-level-1);
    }

    /* On hover */
    div.sk-estimator:hover .sk-estimator-doc-link:hover,
    .sk-estimator-doc-link:hover,
    div.sk-label-container:hover .sk-estimator-doc-link:hover,
    .sk-estimator-doc-link:hover {
      /* unfitted */
      background-color: var(--sklearn-color-unfitted-level-3);
      color: var(--sklearn-color-background);
      text-decoration: none;
    }

    div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,
    .sk-estimator-doc-link.fitted:hover,
    div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,
    .sk-estimator-doc-link.fitted:hover {
      /* fitted */
      background-color: var(--sklearn-color-fitted-level-3);
      color: var(--sklearn-color-background);
      text-decoration: none;
    }

    /* Span, style for the box shown on hovering the info icon */
    .sk-estimator-doc-link span {
      display: none;
      z-index: 9999;
      position: relative;
      font-weight: normal;
      right: .2ex;
      padding: .5ex;
      margin: .5ex;
      width: min-content;
      min-width: 20ex;
      max-width: 50ex;
      color: var(--sklearn-color-text);
      box-shadow: 2pt 2pt 4pt #999;
      /* unfitted */
      background: var(--sklearn-color-unfitted-level-0);
      border: .5pt solid var(--sklearn-color-unfitted-level-3);
    }

    .sk-estimator-doc-link.fitted span {
      /* fitted */
      background: var(--sklearn-color-fitted-level-0);
      border: var(--sklearn-color-fitted-level-3);
    }

    .sk-estimator-doc-link:hover span {
      display: block;
    }

    /* "?"-specific style due to the `<a>` HTML tag */

    #sk-container-id-1 a.estimator_doc_link {
      float: right;
      font-size: 1rem;
      line-height: 1em;
      font-family: monospace;
      background-color: var(--sklearn-color-background);
      border-radius: 1rem;
      height: 1rem;
      width: 1rem;
      text-decoration: none;
      /* unfitted */
      color: var(--sklearn-color-unfitted-level-1);
      border: var(--sklearn-color-unfitted-level-1) 1pt solid;
    }

    #sk-container-id-1 a.estimator_doc_link.fitted {
      /* fitted */
      border: var(--sklearn-color-fitted-level-1) 1pt solid;
      color: var(--sklearn-color-fitted-level-1);
    }

    /* On hover */
    #sk-container-id-1 a.estimator_doc_link:hover {
      /* unfitted */
      background-color: var(--sklearn-color-unfitted-level-3);
      color: var(--sklearn-color-background);
      text-decoration: none;
    }

    #sk-container-id-1 a.estimator_doc_link.fitted:hover {
      /* fitted */
      background-color: var(--sklearn-color-fitted-level-3);
    }
    </style><div id="sk-container-id-1" class="sk-top-container"><div class="sk-text-repr-fallback"><pre>GridSearchCV(estimator=Ridge(),
                 param_grid={&#x27;alpha&#x27;: array([1.00000000e-03, 1.45634848e-03, 2.12095089e-03, 3.08884360e-03,
           4.49843267e-03, 6.55128557e-03, 9.54095476e-03, 1.38949549e-02,
           2.02358965e-02, 2.94705170e-02, 4.29193426e-02, 6.25055193e-02,
           9.10298178e-02, 1.32571137e-01, 1.93069773e-01, 2.81176870e-01,
           4.09491506e-01, 5.96362332e-01, 8.68511374e-01, 1.26485...
           3.72759372e+01, 5.42867544e+01, 7.90604321e+01, 1.15139540e+02,
           1.67683294e+02, 2.44205309e+02, 3.55648031e+02, 5.17947468e+02,
           7.54312006e+02, 1.09854114e+03, 1.59985872e+03, 2.32995181e+03,
           3.39322177e+03, 4.94171336e+03, 7.19685673e+03, 1.04811313e+04,
           1.52641797e+04, 2.22299648e+04, 3.23745754e+04, 4.71486636e+04,
           6.86648845e+04, 1.00000000e+05])},
                 scoring=&#x27;neg_root_mean_squared_error&#x27;)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class="sk-container" hidden><div class="sk-item sk-dashed-wrapped"><div class="sk-label-container"><div class="sk-label fitted sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="sk-estimator-id-1" type="checkbox" ><label for="sk-estimator-id-1" class="sk-toggleable__label fitted sk-toggleable__label-arrow fitted">&nbsp;&nbsp;GridSearchCV<a class="sk-estimator-doc-link fitted" rel="noreferrer" target="_blank" href="https://scikit-learn.org/1.5/modules/generated/sklearn.model_selection.GridSearchCV.html">?<span>Documentation for GridSearchCV</span></a><span class="sk-estimator-doc-link fitted">i<span>Fitted</span></span></label><div class="sk-toggleable__content fitted"><pre>GridSearchCV(estimator=Ridge(),
                 param_grid={&#x27;alpha&#x27;: array([1.00000000e-03, 1.45634848e-03, 2.12095089e-03, 3.08884360e-03,
           4.49843267e-03, 6.55128557e-03, 9.54095476e-03, 1.38949549e-02,
           2.02358965e-02, 2.94705170e-02, 4.29193426e-02, 6.25055193e-02,
           9.10298178e-02, 1.32571137e-01, 1.93069773e-01, 2.81176870e-01,
           4.09491506e-01, 5.96362332e-01, 8.68511374e-01, 1.26485...
           3.72759372e+01, 5.42867544e+01, 7.90604321e+01, 1.15139540e+02,
           1.67683294e+02, 2.44205309e+02, 3.55648031e+02, 5.17947468e+02,
           7.54312006e+02, 1.09854114e+03, 1.59985872e+03, 2.32995181e+03,
           3.39322177e+03, 4.94171336e+03, 7.19685673e+03, 1.04811313e+04,
           1.52641797e+04, 2.22299648e+04, 3.23745754e+04, 4.71486636e+04,
           6.86648845e+04, 1.00000000e+05])},
                 scoring=&#x27;neg_root_mean_squared_error&#x27;)</pre></div> </div></div><div class="sk-parallel"><div class="sk-parallel-item"><div class="sk-item"><div class="sk-label-container"><div class="sk-label fitted sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="sk-estimator-id-2" type="checkbox" ><label for="sk-estimator-id-2" class="sk-toggleable__label fitted sk-toggleable__label-arrow fitted">best_estimator_: Ridge</label><div class="sk-toggleable__content fitted"><pre>Ridge(alpha=np.float64(0.029470517025518096))</pre></div> </div></div><div class="sk-serial"><div class="sk-item"><div class="sk-estimator fitted sk-toggleable"><input class="sk-toggleable__control sk-hidden--visually" id="sk-estimator-id-3" type="checkbox" ><label for="sk-estimator-id-3" class="sk-toggleable__label fitted sk-toggleable__label-arrow fitted">&nbsp;Ridge<a class="sk-estimator-doc-link fitted" rel="noreferrer" target="_blank" href="https://scikit-learn.org/1.5/modules/generated/sklearn.linear_model.Ridge.html">?<span>Documentation for Ridge</span></a></label><div class="sk-toggleable__content fitted"><pre>Ridge(alpha=np.float64(0.029470517025518096))</pre></div> </div></div></div></div></div></div></div></div></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 84-86

Now, we store the hyperparameter's metrics in a dataframe and make a custom
plot:

.. GENERATED FROM PYTHON SOURCE LINES 88-94

.. code-block:: Python

    import pandas as pd

    df = pd.DataFrame(gs_cv.cv_results_)
    df.insert(len(df.columns), "rmse", -df["mean_test_score"].values)
    df[["param_alpha", "rmse"]].head()






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>param_alpha</th>
          <th>rmse</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>0.001000</td>
          <td>55.618873</td>
        </tr>
        <tr>
          <th>1</th>
          <td>0.001456</td>
          <td>55.492536</td>
        </tr>
        <tr>
          <th>2</th>
          <td>0.002121</td>
          <td>55.358884</td>
        </tr>
        <tr>
          <th>3</th>
          <td>0.003089</td>
          <td>55.219924</td>
        </tr>
        <tr>
          <th>4</th>
          <td>0.004498</td>
          <td>55.076585</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 95-105

.. code-block:: Python

    import matplotlib.pyplot as plt

    fig = plt.figure(layout="constrained")
    plt.plot(df["param_alpha"], df["rmse"])
    plt.xscale("log")
    plt.xlabel("Alpha hyperparameter")
    plt.ylabel("RMSE")
    plt.title("Ridge regression")
    plt.show()




.. image-sg:: /auto_examples/images/sphx_glr_plot_01_getting_started_001.png
   :alt: Ridge regression
   :srcset: /auto_examples/images/sphx_glr_plot_01_getting_started_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 106-109

|
Finally, we store some relevant information to our skore project, so that we
can visualize them later in the skore UI for example:

.. GENERATED FROM PYTHON SOURCE LINES 111-115

.. code-block:: Python

    my_project.put("my_gs_cv", gs_cv)
    my_project.put("my_df", df)
    my_project.put("my_fig", fig)








.. GENERATED FROM PYTHON SOURCE LINES 116-131

Cross-validation with skore
===========================

In order to assist its users when programming, skore has implemented a
:func:`~skore.cross_validate` function that wraps scikit-learn's
:func:`~sklearn.model_selection.cross_validate`, to provide more context and
facilitate the analysis.

For more information on the motivation behind skore's ``cross_validate``,
see :ref:`example_cross_validate`.

On the same previous data and a Ridge regressor (with default ``alpha`` value),
let us launch skore's cross-validation, which will automatically add
(:func:`~skore.Project.put`)
a ``cross_validation`` item with a plotly chart in your project.

.. GENERATED FROM PYTHON SOURCE LINES 133-139

.. code-block:: Python

    from skore import cross_validate

    cv_results = cross_validate(Ridge(), X, y, cv=5, project=my_project)

    fig_plotly = my_project.get_item("cross_validation").plot








.. GENERATED FROM PYTHON SOURCE LINES 140-145

.. note::
  Because Plotly graphs currently do not properly render in our Sphinx
  auto-examples docs engine due to
  `a bug in Plotly <https://github.com/plotly/plotly.py/issues/4828>`_,
  we display its static image below.

.. GENERATED FROM PYTHON SOURCE LINES 147-158

.. code-block:: Python

    import matplotlib.pyplot as plt
    import matplotlib.image as mpimg

    fig_plotly.write_image("plot_01_cross_validation.png", scale=2)

    img = mpimg.imread("plot_01_cross_validation.png")
    fig, ax = plt.subplots(layout="constrained")
    ax.axis("off")
    ax.imshow(img)
    plt.show()




.. image-sg:: /auto_examples/images/sphx_glr_plot_01_getting_started_002.png
   :alt: plot 01 getting started
   :srcset: /auto_examples/images/sphx_glr_plot_01_getting_started_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 159-168

Manipulating the skore UI
=========================

The skore UI is a very efficient tool to track and visualize the items in your
project, such as grid search or cross-validation results.

#. On the top left, by default, you can observe that you are in a *View* called ``default``. You can rename this view or create another one.
#. From the *Items* section on the bottom left, you can add stored items to this view, either by clicking on ``+`` or by doing drag-and-drop.
#. In the skore UI on the right, you can drag-and-drop items to re-order them, remove items, etc.

.. GENERATED FROM PYTHON SOURCE LINES 170-172

.. image:: https://raw.githubusercontent.com/sylvaincom/sylvaincom.github.io/master/files/probabl/skore/2024_10_30_skore_demo.gif
  :alt: Getting started with ``skore`` demo

.. GENERATED FROM PYTHON SOURCE LINES 174-176

.. admonition:: Stay tuned for some new features!
  Feel free to join our `Discord <https://discord.gg/scBZerAGwW>`_.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 7.155 seconds)


.. _sphx_glr_download_auto_examples_plot_01_getting_started.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_01_getting_started.ipynb <plot_01_getting_started.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_01_getting_started.py <plot_01_getting_started.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_01_getting_started.zip <plot_01_getting_started.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
