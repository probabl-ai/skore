
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_04_tracking_items.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plot_04_tracking_items.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_04_tracking_items.py:


.. _example_historization_items:

==================================
Tracking items using their history
==================================

This example illustrates how skore can be used to track some items using their history,
for example tracking some ML metrics over time.

.. GENERATED FROM PYTHON SOURCE LINES 13-15

Creating and loading the skore project
======================================

.. GENERATED FROM PYTHON SOURCE LINES 17-19

We start by creating a temporary directory to store our project so that we can
easily clean it after executing this example:

.. GENERATED FROM PYTHON SOURCE LINES 21-27

.. code-block:: Python

    import tempfile
    from pathlib import Path

    temp_dir = tempfile.TemporaryDirectory(prefix="skore_example_")
    temp_dir_path = Path(temp_dir.name)








.. GENERATED FROM PYTHON SOURCE LINES 28-29

We create and load the skore project from this temporary directory:

.. GENERATED FROM PYTHON SOURCE LINES 31-35

.. code-block:: Python

    import skore

    my_project = skore.create("my_project", working_dir=temp_dir_path)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    [11/28/24 13:32:20] <Logger skore.project.project (INFO)> Project  create.py:148
                                                              file                  
                                                              '/tmp/sk              
                                                              ore_exam              
                                                              ple_xaza              
                                                              88lz/my_              
                                                              project.              
                                                              skore'                
                                                              was                   
                                                              successf              
                                                              ully                  
                                                              created.              




.. GENERATED FROM PYTHON SOURCE LINES 36-38

Tracking an integer
===================

.. GENERATED FROM PYTHON SOURCE LINES 40-42

Let us store several integer values for a same item called ``my_int``, each storage
being separated by 0.1 second:

.. GENERATED FROM PYTHON SOURCE LINES 44-52

.. code-block:: Python

    import time

    my_project.put("my_int", 4)
    time.sleep(0.1)
    my_project.put("my_int", 9)
    time.sleep(0.1)
    my_project.put("my_int", 16)








.. GENERATED FROM PYTHON SOURCE LINES 53-66

.. note::

  We could launch the skore dashboard with:

  .. code-block:: bash

      skore launch "my_project"

  and, from the skore UI, we could visualize the different histories of the ``my_int``
  item:

  .. image:: https://raw.githubusercontent.com/sylvaincom/sylvaincom.github.io/master/files/probabl/skore/2024_11_21_tracking_comp.gif
      :alt: Tracking the history of an item from the skore UI

.. GENERATED FROM PYTHON SOURCE LINES 68-69

We retrieve the history of the ``my_int`` item:

.. GENERATED FROM PYTHON SOURCE LINES 71-73

.. code-block:: Python

    item_histories = my_project.get_item_versions("my_int")








.. GENERATED FROM PYTHON SOURCE LINES 74-75

We can print the first history (first iteration) of this item:

.. GENERATED FROM PYTHON SOURCE LINES 77-83

.. code-block:: Python

    item_history = item_histories[0]
    print(item_history)
    print(item_history.primitive)
    print(item_history.created_at)
    print(item_history.updated_at)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    PrimitiveItem(...)
    4
    2024-11-28T13:32:20.190355+00:00
    2024-11-28T13:32:20.190355+00:00




.. GENERATED FROM PYTHON SOURCE LINES 84-85

Let us construct a dataframe with the values and last updated times:

.. GENERATED FROM PYTHON SOURCE LINES 87-104

.. code-block:: Python

    import numpy as np
    import pandas as pd

    list_primitive, list_created_at, list_updated_at = zip(
        *[(elem.primitive, elem.created_at, elem.updated_at) for elem in item_histories]
    )

    df_track = pd.DataFrame(
        {
            "primitive": list_primitive,
            "created_at": list_created_at,
            "updated_at": list_updated_at,
        }
    )
    df_track.insert(0, "iteration_number", np.arange(len(df_track)))
    df_track






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th>iteration_number</th>
          <th>primitive</th>
          <th>created_at</th>
          <th>updated_at</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th>0</th>
          <td>0</td>
          <td>4</td>
          <td>2024-11-28T13:32:20.190355+00:00</td>
          <td>2024-11-28T13:32:20.190355+00:00</td>
        </tr>
        <tr>
          <th>1</th>
          <td>1</td>
          <td>9</td>
          <td>2024-11-28T13:32:20.190355+00:00</td>
          <td>2024-11-28T13:32:20.291293+00:00</td>
        </tr>
        <tr>
          <th>2</th>
          <td>2</td>
          <td>16</td>
          <td>2024-11-28T13:32:20.190355+00:00</td>
          <td>2024-11-28T13:32:20.392172+00:00</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 105-112

.. role:: python(code)
  :language: python

Notice that the ``created_at`` dates are the same for all iterations because they
correspond to the same item, but the ``updated_at`` dates are spaced by 0.1 second
(approximately) as we used :python:`time.sleep(0.1)` between each
:func:`~skore.Project.put`.

.. GENERATED FROM PYTHON SOURCE LINES 114-115

We can now track the value of the item over time:

.. GENERATED FROM PYTHON SOURCE LINES 117-129

.. code-block:: Python

    import plotly.express as px

    fig = px.line(
        df_track,
        x="iteration_number",
        y="primitive",
        hover_data=df_track.columns,
        markers=True,
    )
    fig.update_layout(xaxis_type="category")
    fig






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>                        <script type="text/javascript">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>
            <script charset="utf-8" src="https://cdn.plot.ly/plotly-2.35.2.min.js"></script>                <div id="be0c741a-01a2-4e6c-b972-cd4315c8bc38" class="plotly-graph-div" style="height:100%; width:100%;"></div>            <script type="text/javascript">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById("be0c741a-01a2-4e6c-b972-cd4315c8bc38")) {                    Plotly.newPlot(                        "be0c741a-01a2-4e6c-b972-cd4315c8bc38",                        [{"customdata":[["2024-11-28T13:32:20.190355+00:00","2024-11-28T13:32:20.190355+00:00"],["2024-11-28T13:32:20.190355+00:00","2024-11-28T13:32:20.291293+00:00"],["2024-11-28T13:32:20.190355+00:00","2024-11-28T13:32:20.392172+00:00"]],"hovertemplate":"iteration_number=%{x}\u003cbr\u003eprimitive=%{y}\u003cbr\u003ecreated_at=%{customdata[0]}\u003cbr\u003eupdated_at=%{customdata[1]}\u003cextra\u003e\u003c\u002fextra\u003e","legendgroup":"","line":{"color":"#636efa","dash":"solid"},"marker":{"symbol":"circle"},"mode":"lines+markers","name":"","orientation":"v","showlegend":false,"x":[0,1,2],"xaxis":"x","y":[4,9,16],"yaxis":"y","type":"scatter"}],                        {"template":{"data":{"histogram2dcontour":[{"type":"histogram2dcontour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"choropleth":[{"type":"choropleth","colorbar":{"outlinewidth":0,"ticks":""}}],"histogram2d":[{"type":"histogram2d","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmap":[{"type":"heatmap","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"heatmapgl":[{"type":"heatmapgl","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"contourcarpet":[{"type":"contourcarpet","colorbar":{"outlinewidth":0,"ticks":""}}],"contour":[{"type":"contour","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"surface":[{"type":"surface","colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]}],"mesh3d":[{"type":"mesh3d","colorbar":{"outlinewidth":0,"ticks":""}}],"scatter":[{"fillpattern":{"fillmode":"overlay","size":10,"solidity":0.2},"type":"scatter"}],"parcoords":[{"type":"parcoords","line":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolargl":[{"type":"scatterpolargl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"scattergeo":[{"type":"scattergeo","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterpolar":[{"type":"scatterpolar","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"scattergl":[{"type":"scattergl","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatter3d":[{"type":"scatter3d","line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattermapbox":[{"type":"scattermapbox","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scatterternary":[{"type":"scatterternary","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"scattercarpet":[{"type":"scattercarpet","marker":{"colorbar":{"outlinewidth":0,"ticks":""}}}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}],"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"pie":[{"automargin":true,"type":"pie"}]},"layout":{"autotypenumbers":"strict","colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"hovermode":"closest","hoverlabel":{"align":"left"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"bgcolor":"#E5ECF6","angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"ternary":{"bgcolor":"#E5ECF6","aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"sequential":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"sequentialminus":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]]},"xaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"yaxis":{"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","automargin":true,"zerolinewidth":2},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white","gridwidth":2}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"geo":{"bgcolor":"white","landcolor":"#E5ECF6","subunitcolor":"white","showland":true,"showlakes":true,"lakecolor":"white"},"title":{"x":0.05},"mapbox":{"style":"light"}}},"xaxis":{"anchor":"y","domain":[0.0,1.0],"title":{"text":"iteration_number"},"type":"category"},"yaxis":{"anchor":"x","domain":[0.0,1.0],"title":{"text":"primitive"}},"legend":{"tracegroupgap":0},"margin":{"t":60}},                        {"responsive": true}                    )                };                            </script>        </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 130-133

.. note::
  We can hover over the histories of the item to visualize the last update date for
  example.

.. GENERATED FROM PYTHON SOURCE LINES 135-147

Here, we focused on `how` to use skore's tracking of history of items.
But `why` track items?

* We could track some items such as machine learning scores over time to better
  understand which feature engineering works best.

* Avoid overwriting a useful metric by mistake. No results are can be lost.

* The last updated time can help us reproduce an iteration of a key metric.

In the following, we explore skore's :func:`skore.cross_validate` that natively
includes tracking.

.. GENERATED FROM PYTHON SOURCE LINES 149-152

.. _example_track_cv:
Tracking the results of several runs of :func:`skore.cross_validate`
====================================================================

.. GENERATED FROM PYTHON SOURCE LINES 154-157

The :ref:`example_cross_validate` example explains why and how to use the
:func:`skore.cross_validate` function.
Here, let us see how we can use the tracking of items with this function.

.. GENERATED FROM PYTHON SOURCE LINES 159-160

Let us load some data:

.. GENERATED FROM PYTHON SOURCE LINES 162-167

.. code-block:: Python

    from sklearn import datasets

    X, y = datasets.load_diabetes(return_X_y=True)
    X, y = X[:150], y[:150]








.. GENERATED FROM PYTHON SOURCE LINES 168-170

Suppose that some users are coding in their draft notebook and are iterating on some
cross-validations in separate cells and forgot to store the intermediate results:

.. GENERATED FROM PYTHON SOURCE LINES 172-177

.. code-block:: Python

    import skore
    from sklearn.linear_model import Lasso

    skore.cross_validate(Lasso(alpha=0.5), X, y, cv=5, project=my_project)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    {'fit_time': array([0.00072765, 0.00060725, 0.00059962, 0.00060177, 0.00058651]), 'score_time': array([0.00118566, 0.00109458, 0.00109076, 0.00107694, 0.00106955]), 'test_score': array([0.37120575, 0.35192712, 0.23584637, 0.34640053, 0.35467375])}



.. GENERATED FROM PYTHON SOURCE LINES 178-180

.. code-block:: Python

    skore.cross_validate(Lasso(alpha=1), X, y, cv=5, project=my_project)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    {'fit_time': array([0.00068569, 0.00064111, 0.00059128, 0.0006156 , 0.00059009]), 'score_time': array([0.0011766 , 0.00111318, 0.00109553, 0.0010972 , 0.00110483]), 'test_score': array([0.29828675, 0.2241492 , 0.15480127, 0.25519733, 0.17108715])}



.. GENERATED FROM PYTHON SOURCE LINES 181-183

.. code-block:: Python

    skore.cross_validate(Lasso(alpha=2), X, y, cv=5, project=my_project)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    {'fit_time': array([0.00076699, 0.00062037, 0.00062418, 0.00060034, 0.00059247]), 'score_time': array([0.00125217, 0.00121498, 0.00114894, 0.00110459, 0.00112963]), 'test_score': array([ 0.0126695 , -0.00513875, -0.20965344, -0.05184674, -0.15853853])}



.. GENERATED FROM PYTHON SOURCE LINES 184-187

Thanks to the storage of the results by :func:`skore.cross_validate` (done when
specifying the ``project`` argument), we can compare the metrics of each
cross-validation run (on all splits):

.. GENERATED FROM PYTHON SOURCE LINES 189-192

.. code-block:: Python

    fig_plotly = my_project.get_item("cross_validation_aggregated").plot
    fig_plotly






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>                        <script type="text/javascript">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>
            <script charset="utf-8" src="https://cdn.plot.ly/plotly-2.35.2.min.js"></script>                <div id="7f2a524b-c1f7-42ea-bc11-6f98ddde53c3" class="plotly-graph-div" style="height:100%; width:100%;"></div>            <script type="text/javascript">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById("7f2a524b-c1f7-42ea-bc11-6f98ddde53c3")) {                    Plotly.newPlot(                        "7f2a524b-c1f7-42ea-bc11-6f98ddde53c3",                        [{"hovertemplate":"%{y}","legendgroup":"group0","marker":{"color":"#636EFA"},"mode":"markers","name":"test_score","showlegend":true,"visible":"legendonly","x":[0,0,0,0,0,1,1,1,1,1,2,2,2,2,2],"y":[0.37120574525808225,0.3519271170395035,0.23584636728115693,0.3464005348874408,0.35467374580413,0.2982867487756391,0.22414919618930618,0.15480127210175387,0.2551973269039568,0.1710871514478407,0.012669499883874558,-0.005138749984799906,-0.20965344086930604,-0.05184673901257053,-0.15853852798801604],"type":"scatter"},{"hovertemplate":"%{y}","legendgroup":"group1","marker":{"color":"#EF553B"},"mode":"markers","name":"test_r2","showlegend":true,"visible":true,"x":[0,0,0,0,0,1,1,1,1,1,2,2,2,2,2],"y":[0.37120574525808225,0.3519271170395035,0.23584636728115693,0.3464005348874408,0.35467374580413,0.2982867487756391,0.22414919618930618,0.15480127210175387,0.2551973269039568,0.1710871514478407,0.012669499883874558,-0.005138749984799906,-0.20965344086930604,-0.05184673901257053,-0.15853852798801604],"type":"scatter"},{"hovertemplate":"%{y}","legendgroup":"group2","marker":{"color":"#00CC96"},"mode":"markers","name":"test_neg_root_mean_squared_error","showlegend":true,"visible":"legendonly","x":[0,0,0,0,0,1,1,1,1,1,2,2,2,2,2],"y":[-50.15435452402934,-63.9137115116688,-55.12169585171808,-63.969000447922,-63.3339581082995,-52.98271412620445,-69.93123859116155,-57.97111409545601,-68.286418279226,-71.77966037436696,-62.84715747076923,-79.59671072700402,-69.35259436923606,-81.15026699483701,-84.85983909757705],"type":"scatter"},{"customdata":["0:00:00.000728","0:00:00.000607","0:00:00.000600","0:00:00.000602","0:00:00.000587","0:00:00.000686","0:00:00.000641","0:00:00.000591","0:00:00.000616","0:00:00.000590","0:00:00.000767","0:00:00.000620","0:00:00.000624","0:00:00.000600","0:00:00.000592"],"hovertemplate":"%{customdata}\u003cextra\u003efit_time (timedelta)\u003c\u002fextra\u003e","legendgroup":"group3","marker":{"color":"#AB63FA"},"mode":"markers","name":"fit_time (seconds)","showlegend":true,"visible":"legendonly","x":[0,0,0,0,0,1,1,1,1,1,2,2,2,2,2],"y":[0.0007276535034179688,0.0006072521209716797,0.0005996227264404297,0.0006017684936523438,0.0005865097045898438,0.0006856918334960938,0.0006411075592041016,0.000591278076171875,0.0006155967712402344,0.0005900859832763672,0.0007669925689697266,0.0006203651428222656,0.0006241798400878906,0.0006003379821777344,0.0005924701690673828],"type":"scatter"},{"customdata":["0:00:00.001186","0:00:00.001095","0:00:00.001091","0:00:00.001077","0:00:00.001070","0:00:00.001177","0:00:00.001113","0:00:00.001096","0:00:00.001097","0:00:00.001105","0:00:00.001252","0:00:00.001215","0:00:00.001149","0:00:00.001105","0:00:00.001130"],"hovertemplate":"%{customdata}\u003cextra\u003escore_time (timedelta)\u003c\u002fextra\u003e","legendgroup":"group4","marker":{"color":"#FFA15A"},"mode":"markers","name":"score_time (seconds)","showlegend":true,"visible":"legendonly","x":[0,0,0,0,0,1,1,1,1,1,2,2,2,2,2],"y":[0.0011856555938720703,0.0010945796966552734,0.0010907649993896484,0.0010769367218017578,0.0010695457458496094,0.001176595687866211,0.0011131763458251953,0.0010955333709716797,0.0010972023010253906,0.0011048316955566406,0.0012521743774414062,0.0012149810791015625,0.0011489391326904297,0.001104593276977539,0.0011296272277832031],"type":"scatter"}],                        {"template":{"data":{"barpolar":[{"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"barpolar"}],"bar":[{"error_x":{"color":"#2a3f5f"},"error_y":{"color":"#2a3f5f"},"marker":{"line":{"color":"#E5ECF6","width":0.5},"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"bar"}],"carpet":[{"aaxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"baxis":{"endlinecolor":"#2a3f5f","gridcolor":"white","linecolor":"white","minorgridcolor":"white","startlinecolor":"#2a3f5f"},"type":"carpet"}],"choropleth":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"choropleth"}],"contourcarpet":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"contourcarpet"}],"contour":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"contour"}],"heatmapgl":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"heatmapgl"}],"heatmap":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"heatmap"}],"histogram2dcontour":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"histogram2dcontour"}],"histogram2d":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"histogram2d"}],"histogram":[{"marker":{"pattern":{"fillmode":"overlay","size":10,"solidity":0.2}},"type":"histogram"}],"mesh3d":[{"colorbar":{"outlinewidth":0,"ticks":""},"type":"mesh3d"}],"parcoords":[{"line":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"parcoords"}],"pie":[{"automargin":true,"type":"pie"}],"scatter3d":[{"line":{"colorbar":{"outlinewidth":0,"ticks":""}},"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatter3d"}],"scattercarpet":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattercarpet"}],"scattergeo":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattergeo"}],"scattergl":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattergl"}],"scattermapbox":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scattermapbox"}],"scatterpolargl":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterpolargl"}],"scatterpolar":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterpolar"}],"scatter":[{"fillpattern":{"fillmode":"overlay","size":10,"solidity":0.2},"type":"scatter"}],"scatterternary":[{"marker":{"colorbar":{"outlinewidth":0,"ticks":""}},"type":"scatterternary"}],"surface":[{"colorbar":{"outlinewidth":0,"ticks":""},"colorscale":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"type":"surface"}],"table":[{"cells":{"fill":{"color":"#EBF0F8"},"line":{"color":"white"}},"header":{"fill":{"color":"#C8D4E3"},"line":{"color":"white"}},"type":"table"}]},"layout":{"annotationdefaults":{"arrowcolor":"#2a3f5f","arrowhead":0,"arrowwidth":1},"autotypenumbers":"strict","coloraxis":{"colorbar":{"outlinewidth":0,"ticks":""}},"colorscale":{"diverging":[[0,"#8e0152"],[0.1,"#c51b7d"],[0.2,"#de77ae"],[0.3,"#f1b6da"],[0.4,"#fde0ef"],[0.5,"#f7f7f7"],[0.6,"#e6f5d0"],[0.7,"#b8e186"],[0.8,"#7fbc41"],[0.9,"#4d9221"],[1,"#276419"]],"sequential":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]],"sequentialminus":[[0.0,"#0d0887"],[0.1111111111111111,"#46039f"],[0.2222222222222222,"#7201a8"],[0.3333333333333333,"#9c179e"],[0.4444444444444444,"#bd3786"],[0.5555555555555556,"#d8576b"],[0.6666666666666666,"#ed7953"],[0.7777777777777778,"#fb9f3a"],[0.8888888888888888,"#fdca26"],[1.0,"#f0f921"]]},"colorway":["#636efa","#EF553B","#00cc96","#ab63fa","#FFA15A","#19d3f3","#FF6692","#B6E880","#FF97FF","#FECB52"],"font":{"color":"#2a3f5f"},"geo":{"bgcolor":"white","lakecolor":"white","landcolor":"#E5ECF6","showlakes":true,"showland":true,"subunitcolor":"white"},"hoverlabel":{"align":"left"},"hovermode":"closest","mapbox":{"style":"light"},"paper_bgcolor":"white","plot_bgcolor":"#E5ECF6","polar":{"angularaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"bgcolor":"#E5ECF6","radialaxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"scene":{"xaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"},"yaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"},"zaxis":{"backgroundcolor":"#E5ECF6","gridcolor":"white","gridwidth":2,"linecolor":"white","showbackground":true,"ticks":"","zerolinecolor":"white"}},"shapedefaults":{"line":{"color":"#2a3f5f"}},"ternary":{"aaxis":{"gridcolor":"white","linecolor":"white","ticks":""},"baxis":{"gridcolor":"white","linecolor":"white","ticks":""},"bgcolor":"#E5ECF6","caxis":{"gridcolor":"white","linecolor":"white","ticks":""}},"title":{"x":0.05},"xaxis":{"automargin":true,"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","zerolinewidth":2},"yaxis":{"automargin":true,"gridcolor":"white","linecolor":"white","ticks":"","title":{"standoff":15},"zerolinecolor":"white","zerolinewidth":2}}},"title":{"text":"Cross-validation results for each run"},"xaxis":{"dtick":1,"tickmode":"linear","title":{"text":"Run number"}},"yaxis":{"title":{"text":"Value"}}},                        {"responsive": true}                    )                };                            </script>        </div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 193-194

Hence, we can observe that the first run, with ``alpha=0.5``, works better.

.. GENERATED FROM PYTHON SOURCE LINES 196-200

.. note::
  The good practice, instead of running several cross-validations with different
  values of the hyperparameter, would have been to use a
  :func:`sklearn.model_selection.GridSearchCV`.

.. GENERATED FROM PYTHON SOURCE LINES 202-206

Cleanup the project
-------------------

Removing the temporary directory:

.. GENERATED FROM PYTHON SOURCE LINES 208-209

.. code-block:: Python

    temp_dir.cleanup()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.378 seconds)


.. _sphx_glr_download_auto_examples_plot_04_tracking_items.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_04_tracking_items.ipynb <plot_04_tracking_items.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_04_tracking_items.py <plot_04_tracking_items.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_04_tracking_items.zip <plot_04_tracking_items.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
